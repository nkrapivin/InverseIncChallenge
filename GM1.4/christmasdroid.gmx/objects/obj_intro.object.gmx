<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables.

advance = true;
text_pos = 1;
text_spd = 0.3;
text_curr = "";
text_orig = "&lt;-- INVERSE INC RECRUITMENT CHALLENGE --&gt;##HELLO,#THANK YOU FOR #SHOWING YOUR INTEREST IN INVERSE INC.#WE HAVE PREPARED A CHALLENGE FOR YOU,#WHO SOLVES IT FIRST WILL GET A PRIZE.# #";
text_orig += "GREEN TILE - YOU #YELLOW TILE - EXIT #WHEN LIVES REACH 0, YOU DIE. #THERE ARE 30 LEVELS. # #TOUCH TO BEGIN...";

// initialize global scope variables.
global.seed = 0;
global.time = 0;
lives = 3;
score = 0;
health = 1; // LEVEL INDEX!

window_set_caption("INVERSE INCORPORATED RECRUITMENT CHALLENGE");
room_caption = "INVERSE INCORPORATED RECRUITMENT CHALLENGE";

// secret way to run the game again even after dying...
if (keyboard_check_direct(vk_ralt) &amp;&amp; keyboard_check_direct(vk_rshift)) {
    highscore_clear();
    file_delete("hiscore.dat");
    show_message("Highscore table has been cleared, run the game again.");
    scr_game_end();
    exit; // don't execute the death check please.
}

// die check.
if (highscore_name(1) == "DEATH") {
    room_goto(rom_death);
}

// check for internet just by requesting / from the challenge server
global.net = true;
testurl = "https://inversedog.ddns.net/";
test = http_get(testurl);
testdone = false;

instance_deactivate_object(obj_touch_number);

// TEST
//window_set_size(1440, 720);
alarm[2] = 1;

//show_debug_message(string(display_get_dpi_x()));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///center window.
window_center();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset 'advance'
advance = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ease-in text.

if (advance &amp;&amp; string_length(text_curr) &lt; string_length(text_orig)) {
    text_curr = string_copy(text_orig, 1, floor(text_pos));
    text_pos += text_spd;
    
    // pause at newlines with no space.
    if (string_char_at(text_orig, floor(text_pos) - 1) != " " &amp;&amp; string_char_at(text_orig, floor(text_pos)) == "#") {
        advance = false;
        //text_pos += 1;
        alarm[0] = room_speed; // /4;
    }
    
    if (keyboard_check_pressed(vk_shift) || device_mouse_check_button_pressed(0, mb_right)) {
        text_spd *= 5;
    }
}

// start
if ((keyboard_check_pressed(vk_anykey) || device_mouse_check_button_pressed(0, mb_left)) &amp;&amp; testdone &amp;&amp; string_length(text_curr) == string_length(text_orig)) {
    instance_create(x, y, obj_seed_asker);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///do we have internet?

var _id, _status, _url;
_id = ds_map_find_value(async_load, "id");
_status = ds_map_find_value(async_load, "status");
_url = ds_map_find_value(async_load, "url");

testdone = true;

if (_url == testurl &amp;&amp; _id == test &amp;&amp; _status == 0) {
    show_debug_message("We have internet!");
}
else {
    global.net = false;
    show_debug_message("inet oof");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///typewriter draw.

draw_set_color(c_red);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_font(fnt_text);
draw_text(x, y, text_curr);

// draw THE DOG.
draw_sprite(spr_THE_DOG, 0, room_width, room_height);

var tstr = "CHECKING INTERNET CONNECTION,#HANG ON...";
if (testdone) {
    tstr = "ALL GOOD!#YOU WILL BE ABLE TO UPLOAD YOUR SCORE.";
    if (!global.net) {
        tstr = "UNABLE TO CONNECT TO INVERSENET(tm)#RESULT REPORTING IS DISABLED!";
    }
}
draw_text(0, room_height - 60, tstr);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
