<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set kbd string to empty

keyboard_clear(vk_enter);
keyboard_string = "";
droidstring = "";

instance_activate_object(obj_touch_number);
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set characters for touch numbers.

var count = instance_number(obj_touch_number);
var list = array_create(count);
for (var i = 0; i &lt;= 9; i++) {
    list[i] = string(i);
}
list[10] = "&lt;";
list[11] = "OK";

i = 0;
with (obj_touch_number) {
    c = list[(count - 1) - i];
    i++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check seed

// android
var droidpress = false;
with (obj_touch_number) {
    if (once) {
        if (c != "&lt;" &amp;&amp; c != "OK") {
            other.droidstring += c;
        }
        else if (c == "&lt;") {
            other.droidstring = string_copy(other.droidstring, 1, string_length(other.droidstring) - 1);
        }
        else {
            droidpress = true;
        }
    }
}

if (os_type != os_android) {
    droidstring = keyboard_string;
}

if (keyboard_check_pressed(vk_enter) || droidpress) {

    var str; str = droidstring;
    // TODO: sanitize the string properly
    
    if (string_length(str) &lt; 2 || string_digits(str) != str) {
        show_message_async("Invalid employee ID.");
        droidstring = "";
        exit;
    }
    
    global.seed = real(str);
    if (global.seed == 0) { // real() also returns 0 on error sometimes, and employee ID can't be zero.
        show_message_async("Invalid employee ID.");
        droidstring = "";
        exit;
    }
    
    // all good.
    random_set_seed(global.seed);
    room_goto(rom_level);
}

if (os_type != os_android) {
    keyboard_string = droidstring;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw current seed.

draw_set_color(c_red);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_font(fnt_text);
draw_text(x, y, "ENTER YOUR INVERSE INCORPORATED EMPLOYEE ID:#" + droidstring);

// draw THE DOG
draw_sprite(spr_THE_DOG, 0, room_width, room_height);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
